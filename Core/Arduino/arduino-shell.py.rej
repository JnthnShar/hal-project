***************
*** 20,36 ****
  		
  	def getOpts(self):
  		"""docstring for getOpts"""
- 		sys.stdout.write("1. Read\n2. Write\n3. Abort\n")
  
  	def opIsValid(self,op):
  		if op == "1":
- 			print "It's 1 - read"
  			return True
  		elif op == "2":
- 			print "It's 2 - write"
  			return True
  		elif op == "3":
- 			print "It's 3 - abort"
  			return True
  		return False
  
--- 20,36 ----
  		
  	def getOpts(self):
  		"""docstring for getOpts"""
+ 		sys.stdout.write("1. Debug Mode\n2. Write\n3. Abort\n")
  
  	def opIsValid(self,op):
  		if op == "1":
+ 			print "It's 1 - Debug Mode"
  			return True
  		elif op == "2":
+ 			print "It's 2 - Write"
  			return True
  		elif op == "3":
+ 			print "It's 3 - Abort"
  			return True
  		return False
  
***************
*** 38,44 ****
  		"""docstring for handleOp"""
  		print "OP: ", op
  		if op == "1":
- 			self.handleRead()
  		elif op == "2":
  			self.handleWrite()
  		elif op == "3":
--- 38,44 ----
  		"""docstring for handleOp"""
  		print "OP: ", op
  		if op == "1":
+ 			self.handleDebug()
  		elif op == "2":
  			self.handleWrite()
  		elif op == "3":
***************
*** 46,51 ****
  			return True
  		return False
  
  	def handleRead(self):
  		"""docstring for handleRead"""
  		print "Reading: ", self.board.readLine()
--- 46,91 ----
  			return True
  		return False
  
+ 	def handleDebug(self):
+ 		while True:
+ 			print "Debug Menu"
+ 			print "----------\n"
+ 			print "1. Read Digital Pin"
+ 			print "2. Set Digital Pin"
+ 			print "3. Read Analog Pin"
+ 			print "4. Set Analog Pin"
+ 			print "0. Leave"
+ 			dopt = sys.stdin.readline().rstrip()
+ 			
+ 			if dopt == "1":
+ 				print "Pin Number(0-13):"
+ 				pinNo = int(sys.stdin.readline().rstrip())
+ 				if pinNo >= 0 & pinNo <= 13:
+ 					value = self.board.readDPin(pinNo)
+ 					print value
+ 			elif dopt == "2":
+ 				print "Pin Number(0-13):"
+ 				pinNo = int(sys.stdin.readline().rstrip())
+ 				if pinNo >= 0 & pinNo <= 13:
+ 					print "On or Off (1/0)?"
+ 					value = int(sys.stdin.readline().rstrip())
+ 					if value >=0 & value <=1:
+ 						self.board.setDPin(pinNo, value)
+ 					else:
+ 						print "Value out of range."
+ 				else:
+ 					print "Value out of range."
+ 			elif dopt == "3":
+ 				print "Pin Number (0-5):"
+ 				pinNo = int(sys.stdin.readline().rstrip())
+ 				if pinNo >= 0 & pinNo <= 13:
+ 					print self.board.readAPin(pinNo)
+ 			elif dopt == "0":
+ 				break
+ 			else:
+ 				print "Value out of range."
+ 		return True
+ 		
  	def handleRead(self):
  		"""docstring for handleRead"""
  		print "Reading: ", self.board.readLine()
